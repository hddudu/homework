package com.hongdu.gupao.derector.battercake;

/**
 * @ClassName BatterCakeIntroduction
 * @Description 装饰者模式： 煎饼 加蛋 加葱 加热狗 加番茄酱 再加一个蛋
 *      最后还是一个煎饼
 *
 *      核心： 包装器设计模式的核心就是，通过
 *          组合和继承同一个接口的方式，组合和继承同一个接口，组合和继承同一个接口的方式，组合和继承同一个接口，
 *     核心： 包装器设计模式的核心就是，通过
 *          组合和继承同一个接口的方式，组合和继承同一个接口，组合和继承同一个接口的方式，组合和继承同一个接口，
 *     核心： 包装器设计模式的核心就是，通过
 *          组合和继承同一个接口的方式，组合和继承同一个接口，组合和继承同一个接口的方式，组合和继承同一个接口，
 *     不需要更改的行为就用默认实现，需要更改的就自定义修改
 *
 *  学习启示：学习设计模式的过程中，搞清楚这个模式里面有几个角色，也就是有几个对象，理顺他们的关系，也就理解了这个设计模式。
 *  在包装器模式中从根本上来说，就只有被包装对象和包装对象。他们之间是一种组合关系，包装对象内部持有了被包装对象，并提供了一些被包装对象所没有的扩展行为。多出来或者改动的行为就是包装！
 *
 * @Author dudu
 * @Date 2019/7/2 16:05
 * @Version 1.0
 */
public class BatterCakeIntroduction {


    public static void main(String[] args) {

    }
}
